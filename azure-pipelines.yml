# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: Terraform deploy Vnet
trigger:
  - main
pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Plan
    displayName: 'Terraform Plan'
    jobs:
      - job: TerraformPlan
        displayName: 'Terraform Plan'
        steps:
          # Step 1: Initialize and Plan Terraform
          - task: AzureCLI@2
            inputs:
              connectedServiceNameARM: $(azureServiceConnection)  # The service connection defined in your pipeline
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Setting up Azure authentication using the service principal credentials from the service connection"
                echo "Terraform init..."
                terraform init -backend-config="storage_account_name=$(storageAccountName)" -backend-config="container_name=$(containerName)" -backend-config="resource_group_name=$(resourceGroup)"
                echo "Terrform plan..."
                terraform plan
            displayName: 'Terraform init and plan'
          
          # Step 2: Deploy
          - task: AzureCLI@2
            inputs:
              connectedServiceNameARM: $(azureServiceConnection)  # The service connection defined in your pipeline
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                echo "Terraform apply"
                terraform apply -auto-approve
            displayName: 'Terraform apply'

